STDBUF(1)                                                          User Commands                                                         STDBUF(1)

NNAAMMEE
       stdbuf - Run COMMAND, with modified buffering operations for its standard streams.

SSYYNNOOPPSSIISS
       ssttddbbuuff _O_P_T_I_O_N... _C_O_M_M_A_N_D

DDEESSCCRRIIPPTTIIOONN
       Run COMMAND, with modified buffering operations for its standard streams.

       Mandatory arguments to long options are mandatory for short options too.

       --ii, ----iinnppuutt=_M_O_D_E
              adjust standard input stream buffering

       --oo, ----oouuttppuutt=_M_O_D_E
              adjust standard output stream buffering

       --ee, ----eerrrroorr=_M_O_D_E
              adjust standard error stream buffering

       ----hheellpp display this help and exit

       ----vveerrssiioonn
              output version information and exit

       If MODE is 'L' the corresponding stream will be line buffered.  This option is invalid with standard input.

       If MODE is '0' the corresponding stream will be unbuffered.

       Otherwise  MODE  is a number which may be followed by one of the following: KB 1000, K 1024, MB 1000*1000, M 1024*1024, and so on for G, T,
       P, E, Z, Y.  In this case the corresponding stream will be fully buffered with the buffer size set to MODE bytes.

       NOTE: If COMMAND adjusts the buffering of its standard streams ('tee' does for example) then that will override  corresponding  changes  by
       'stdbuf'.  Also some filters (like 'dd' and 'cat' etc.) don't use streams for I/O, and are thus unaffected by 'stdbuf' settings.

EEXXAAMMPPLLEESS
       ttaaiill --ff aacccceessss..lloogg || ssttddbbuuff --ooLL ccuutt --dd '' '' --ff11 || uunniiqq
       This will immedidately display unique entries from access.log

BBUUGGSS
       On GLIBC platforms, specifying a buffer size, i.e., using fully buffered mode will result in undefined operation.

AAUUTTHHOORR
       Written by Padraig Brady.

RREEPPOORRTTIINNGG BBUUGGSS
       GNU coreutils online help: <http://www.gnu.org/software/coreutils/>
       Report stdbuf translation bugs to <http://translationproject.org/team/>

CCOOPPYYRRIIGGHHTT
       Copyright Â© 2016 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.

SSEEEE AALLSSOO
       Full documentation at: <http://www.gnu.org/software/coreutils/stdbuf>
       or available locally via: info '(coreutils) stdbuf invocation'

GNU coreutils 8.25                                                 February 2017                                                         STDBUF(1)
